<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="https://www.w3.org/2005/Atom">
  <title>pengdon</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://pengdon.github.io/"/>
  <updated>2020-04-27T01:23:56.950Z</updated>
  <id>https://pengdon.github.io/</id>
  
  <author>
    <name>don</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaScript算法</title>
    <link href="https://pengdon.github.io/2020/04/27/index/"/>
    <id>https://pengdon.github.io/2020/04/27/index/</id>
    <published>2020-04-27T01:23:56.950Z</published>
    <updated>2020-04-27T01:23:56.950Z</updated>
    
    <content type="html"><![CDATA[<h2 id=""><a class="markdownIt-Anchor" href="#"></a> </h2><h3 id="1-输出没有连续重复字符的组合数"><a class="markdownIt-Anchor" href="#1-输出没有连续重复字符的组合数"></a> 1. 输出没有连续重复字符的组合数</h3><blockquote><p><strong>问题描述</strong>：把一个字符串中的所有的字符重新排列，然后生成一个新的字符串，返回的新字符串中没有连续重复的字符。连续重复是以单个字符为判断标准。<br />例如：aab应该返回 2， 因为它总共有 6 种排列方式： aab， aab， aba， aba， baa， baa，但是其中只有 2 个没有连续重复的字符（字符 a 是本例中的重复字符）：aba，aba</p></blockquote><blockquote><p><strong>预期结果</strong>：<br />permAlone(“aab”)应该返回 2。<br />permAlone(“aaa”)应该返回 0。<br />permAlone(“aabb”)应该返回 8。<br />permAlone(“abcdefa”)应该返回 3600。<br />permAlone(“abfdefa”)应该返回 2640。<br />permAlone(“aaab”)应该返回 0。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> permAlone(str) &#123;</span><br><span class="line">    // 匹配是否有重复字符</span><br><span class="line">    <span class="built_in">let</span> reg = /(\w)\1+/g;</span><br><span class="line">    <span class="keyword">if</span> (str.match(reg) !== null &amp;&amp; str.match(reg)[0] === str) <span class="built_in">return</span> 0;</span><br><span class="line">    <span class="built_in">let</span> arr = str.split(<span class="string">''</span>);</span><br><span class="line">    // 利用es6解构赋值交换元素位置</span><br><span class="line">    <span class="keyword">function</span> swap(n1,n2)&#123;</span><br><span class="line">        [arr[n1],arr[n2]] = [arr[n2],arr[n1]]</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="built_in">let</span> tempArr = [];</span><br><span class="line">    <span class="keyword">function</span> generate(len)&#123;</span><br><span class="line">        <span class="keyword">if</span>(len === 1 &amp;&amp; !arr.join(<span class="string">''</span>).match(reg))&#123;</span><br><span class="line">            tempArr.push(arr.join(<span class="string">''</span>))</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">let</span> i = 0; i!=len;++i)&#123;</span><br><span class="line">                generate(len-1);</span><br><span class="line">                swap(len%2?0:i,len-1)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    generate(arr.length) </span><br><span class="line">    // 利用filter去重返回新数组</span><br><span class="line">    <span class="built_in">return</span> tempArr.length;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-输出对等分差"><a class="markdownIt-Anchor" href="#2-输出对等分差"></a> 2. 输出对等分差</h3><blockquote><p><strong>问题描述</strong>：两个集合的对称差分是只属于其中一个集合，而不属于另一个集合的元素组成的集合，例如：集合let A = [ 1, 2, 3]和let B = [ 2, 3, 4]的对称差分为A △ B = C = [ 1, 4]。 集合论中的这个运算相当于布尔逻辑中的异或运算。<br />设定两个数组 (例如：let A = [1, 2, 3]，let B = [2, 3, 4])作为参数传入，返回对称差分数组（A △ B = C = [1, 4]），且数组中没有重复项。</p></blockquote><blockquote><p><strong>预期结果</strong>：<br />sym([1, 2, 3, 3], [5, 2, 1, 4])应该返回[3, 4, 5]。<br />sym([1, 2, 3], [5, 2, 1, 4, 5])应该返回[3, 4, 5]。<br />sym([1, 2, 5], [2, 3, 5], [3, 4, 5])应该返回[1, 4, 5]。<br />sym([1, 1, 2, 5], [2, 2, 3, 5], [3, 4, 5, 5])应该返回[1, 4, 5]。<br />sym([3, 3, 3, 2, 5], [2, 1, 5, 7], [3, 4, 6, 6], [1, 2, 3])应该返回[2, 3, 4, 6, 7]。<br />sym([3, 3, 3, 2, 5], [2, 1, 5, 7], [3, 4, 6, 6], [1, 2, 3], [5, 3, 9, 8], [1])应该返回[1, 2, 4, 5, 6, 7, 8, 9]。</p></blockquote> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> sym(...args) &#123;</span><br><span class="line">    // 利用reduce组合数据，再利用Set去重</span><br><span class="line">    <span class="built_in">return</span> [...new Set(args.reduce(diffArray))].sort();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 区分两个数组,返回不同部分</span><br><span class="line"><span class="keyword">function</span> diffArray(arr1, arr2) &#123;</span><br><span class="line">   <span class="built_in">return</span> arr1</span><br><span class="line">        .filter(element =&gt; !arr2.includes(element))</span><br><span class="line">        .concat(arr2.filter(element =&gt; !arr1.includes(element)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#&quot;&gt;&lt;/a&gt; &lt;/h2&gt;
&lt;h3 id=&quot;1-输出没有连续重复字符的组合数&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-输出没有连续重复字符的组合数&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="Arithmetic" scheme="https://pengdon.github.io/categories/Arithmetic/"/>
    
    
      <category term="Javascript" scheme="https://pengdon.github.io/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>vue-cli3.0版本 prerender 预渲染</title>
    <link href="https://pengdon.github.io/2019/11/14/prerender/"/>
    <id>https://pengdon.github.io/2019/11/14/prerender/</id>
    <published>2019-11-14T12:11:27.000Z</published>
    <updated>2020-04-28T03:04:36.261Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前提"><a class="markdownIt-Anchor" href="#前提"></a> 前提</h3><p>node10^ 、 npm6^ 、vue-cli3</p><h3 id="简写"><a class="markdownIt-Anchor" href="#简写"></a> 简写</h3><p>-S --&gt; --save  // 生产阶段的依赖<br />-D --&gt; --save-dev  // 开发阶段的依赖</p><h3 id="普通场景下的预渲染"><a class="markdownIt-Anchor" href="#普通场景下的预渲染"></a> 普通场景下的预渲染</h3><p>1、利用手脚架新建个项目</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vue create vue3-prerender</span><br><span class="line"><span class="built_in">cd</span> vue3-prerender</span><br></pre></td></tr></table></figure><p>2、项目大致结构如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">vue3-prerender</span><br><span class="line">--node_modules</span><br><span class="line">--public</span><br><span class="line">--src</span><br><span class="line">--tests</span><br><span class="line">--.browserslistrc</span><br><span class="line">--.editorconfig</span><br><span class="line">--.eslintrc.js</span><br><span class="line">--.gitignore</span><br><span class="line">--babel.config.js</span><br><span class="line">--jest.config.js</span><br><span class="line">--package.json</span><br><span class="line">--package-lock.json</span><br><span class="line">--README.md</span><br></pre></td></tr></table></figure><p>3、运行项目</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm run serve</span><br><span class="line"><span class="comment"># 可以看到有两个视图Home、About</span></span><br></pre></td></tr></table></figure><p>4、预渲染插件安装</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置镜像下载可以加速下载</span></span><br><span class="line">npm config <span class="built_in">set</span> PUPPETEER_DOWNLOAD_HOST=https://npm.taobao.org/mirrors &amp;&amp; npm install prerender-spa-plugin -D</span><br></pre></td></tr></table></figure><p>5、新建vue.config.js文件配置预渲染,文件内容如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 普通场景下的预渲染</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="keyword">const</span> PrerenderSPAPlugin = <span class="built_in">require</span>(<span class="string">'prerender-spa-plugin'</span>)</span><br><span class="line"><span class="keyword">const</span> Renderer = PrerenderSPAPlugin.PuppeteerRenderer</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  publicPath:<span class="string">'/'</span>,</span><br><span class="line">  configureWebpack:<span class="function"><span class="params">config</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 生产环境</span></span><br><span class="line">    <span class="keyword">if</span> (process.env.NODE_ENV === <span class="string">'production'</span>) &#123;</span><br><span class="line">      <span class="comment">// 预渲染配置</span></span><br><span class="line">      <span class="keyword">new</span> PrerenderSPAPlugin(&#123;</span><br><span class="line">        <span class="comment">// 默认输出是dist目录</span></span><br><span class="line">        staticDir: path.join(__dirname, <span class="string">'dist'</span>),</span><br><span class="line">        <span class="comment">// 必需，要渲染的路线，根据自己定义的路由配置</span></span><br><span class="line">        routes: [<span class="string">'/'</span>, <span class="string">'/about'</span>],</span><br><span class="line">        <span class="comment">// 必须，要使用的实际渲染器，没有则不能预编译</span></span><br><span class="line">        renderer: <span class="keyword">new</span> Renderer(&#123;</span><br><span class="line">          inject: &#123;&#125;,</span><br><span class="line">          headless: <span class="literal">false</span>, <span class="comment">// 渲染时显示浏览器窗口。对调试很有用。</span></span><br><span class="line">          renderAfterDocumentEvent: <span class="string">'render-event'</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>6、修改main.js文件,修改后内容如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.vue'</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">'./router'</span></span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  router,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App),</span><br><span class="line">  mounted () &#123;</span><br><span class="line">    <span class="comment">// 这句非常重要，否则预渲染将不会启动</span></span><br><span class="line">    <span class="built_in">document</span>.dispatchEvent(<span class="keyword">new</span> Event(<span class="string">'render-event'</span>))</span><br><span class="line">  &#125;</span><br><span class="line">&#125;).$mount(<span class="string">'#app'</span>)</span><br></pre></td></tr></table></figure><p>7、修改router目录下的index.js文件，修改内容如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">'@/views/Home.vue'</span></span><br><span class="line"></span><br><span class="line">Vue.use(VueRouter)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/'</span>,</span><br><span class="line">    name: <span class="string">'Home'</span>,</span><br><span class="line">    component: Home</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/about'</span>,</span><br><span class="line">    name: <span class="string">'About'</span>,</span><br><span class="line">    component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'../views/About.vue'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  mode: <span class="string">'history'</span>, <span class="comment">// 预渲染一定要模式改成history</span></span><br><span class="line">  routes</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><p>8、 执行构建打包命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><p>9、 可以看到根目录多了个dist文件夹，目录结构如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-dist</span><br><span class="line">--about</span><br><span class="line">--static</span><br><span class="line">--favicon.ico</span><br><span class="line">--index.html</span><br></pre></td></tr></table></figure><ul><li>在vue.config.js的预渲染插件路由数组里面配置了几个路由就会生成相应的静态文件</li></ul><h3 id="特殊场景下的预渲染"><a class="markdownIt-Anchor" href="#特殊场景下的预渲染"></a> 特殊场景下的预渲染</h3><h4 id="场景描述"><a class="markdownIt-Anchor" href="#场景描述"></a> 场景描述</h4><p>1、例如公司主域名是 <a href="http://www.abc.com" target="_blank" rel="noopener">www.abc.com</a>，现在开发的项目是挂载在主域名下的子目录，也就是通过https://www.abc.com/edu访问<br />2、由于目前路由是history模式，子目录的场景需要改路由的base属性、vue.config.js的publicPath属性，影响到预渲染的其他配置</p><h4 id="具体操作针对普通场景配置做修改"><a class="markdownIt-Anchor" href="#具体操作针对普通场景配置做修改"></a> 具体操作针对普通场景配置做修改</h4><p>1、修改router目录下的index.js文件，内容如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">'@/views/Home.vue'</span></span><br><span class="line"></span><br><span class="line">Vue.use(VueRouter)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/'</span>,</span><br><span class="line">    name: <span class="string">'Home'</span>,</span><br><span class="line">    component: Home</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/about'</span>,</span><br><span class="line">    name: <span class="string">'About'</span>,</span><br><span class="line">    component: <span class="function"><span class="params">()</span> =&gt;</span> <span class="keyword">import</span>(<span class="string">'../views/About.vue'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  mode: <span class="string">'history'</span>, <span class="comment">// 预渲染一定要模式改成history</span></span><br><span class="line">  base: <span class="string">'/edu/'</span>, <span class="comment">// 这个根据实际场景自己配置，但要与vue.config.js文件中的publicPath属性保持一致</span></span><br><span class="line">  routes</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><p>2、修改vue.config.js文件，内容如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 普通场景下的预渲染</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="keyword">const</span> PrerenderSPAPlugin = <span class="built_in">require</span>(<span class="string">'prerender-spa-plugin'</span>)</span><br><span class="line"><span class="keyword">const</span> Renderer = PrerenderSPAPlugin.PuppeteerRenderer</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  publicPath: process.env.NODE_ENV === <span class="string">'production'</span>?<span class="string">'/edu/'</span>:<span class="string">'/'</span>,</span><br><span class="line">  outputDir: <span class="string">'dist/edu'</span>, </span><br><span class="line">  configureWebpack:<span class="function"><span class="params">config</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 生产环境</span></span><br><span class="line">    <span class="keyword">if</span> (process.env.NODE_ENV === <span class="string">'production'</span>) &#123;</span><br><span class="line">      <span class="comment">// 预渲染配置</span></span><br><span class="line">      <span class="keyword">new</span> PrerenderSPAPlugin(&#123;</span><br><span class="line">        staticDir: path.join(__dirname, <span class="string">'dist/'</span>),</span><br><span class="line">        outputDir: path.join(__dirname, <span class="string">'dist/edu'</span>),</span><br><span class="line">        indexPath: path.join(__dirname, <span class="string">'dist'</span>, <span class="string">'/edu/index.html'</span>),</span><br><span class="line">        <span class="comment">// 必需，要渲染的路线，根据自己定义的路由配置</span></span><br><span class="line">        routes: [<span class="string">'/'</span>, <span class="string">'/about'</span>],</span><br><span class="line">        <span class="comment">// 必须，要使用的实际渲染器，没有则不能预编译</span></span><br><span class="line">        renderer: <span class="keyword">new</span> Renderer(&#123;</span><br><span class="line">          inject: &#123;&#125;,</span><br><span class="line">          headless: <span class="literal">false</span>, <span class="comment">// 渲染时显示浏览器窗口。对调试很有用。</span></span><br><span class="line">          renderAfterDocumentEvent: <span class="string">'render-event'</span></span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、 执行构建打包命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><p>4、 可以看到根目录多了个dist文件夹，目录结构如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-dist</span><br><span class="line">--edu</span><br><span class="line">---about</span><br><span class="line">---static</span><br><span class="line">---favicon.ico</span><br><span class="line">---index.html</span><br></pre></td></tr></table></figure><h3 id="常见问题以及解决方案"><a class="markdownIt-Anchor" href="#常见问题以及解决方案"></a> 常见问题以及解决方案</h3><h4 id="问题1项目打包发布到服务器上后刷新页面会出现404问题"><a class="markdownIt-Anchor" href="#问题1项目打包发布到服务器上后刷新页面会出现404问题"></a> 问题1：项目打包发布到服务器上后，刷新页面会出现404问题</h4><blockquote><p><strong>原因</strong> 路由是history模式导致的<br /><strong>解决方案</strong> 修改服务器相关nginx.conf配置</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">location ~* ^/edu &#123;</span><br><span class="line">  try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.html; <span class="comment"># 解决vue路由history模式打包到生产，刷新页面出现404的问题</span></span><br><span class="line">  index index.html index.htm;</span><br><span class="line">  <span class="keyword">if</span> ( !-e <span class="variable">$request_filename</span> ) &#123;</span><br><span class="line">    rewrite ^(.*) /edu/index.html;</span><br><span class="line">    <span class="built_in">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="相关参考"><a class="markdownIt-Anchor" href="#相关参考"></a> 相关参考</h3><p><a href="https://cn.vuejs.org/v2/guide/" target="_blank" rel="noopener">Vue</a><br /><a href="https://cli.vuejs.org/zh/guide/" target="_blank" rel="noopener">Vue CLI</a><br /><a href="https://webpack.js.org/concepts/" target="_blank" rel="noopener">Webpack4^</a><br /><a href="https://github.com/neutrinojs/webpack-chain" target="_blank" rel="noopener">webpack-chain</a><br /><a href="https://zhaoqize.github.io/puppeteer-api-zh_CN/#/" target="_blank" rel="noopener">puppeteer</a><br /><a href="https://github.com/chrisvfritz/prerender-spa-plugin" target="_blank" rel="noopener">prerender-spa-plugin</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前提&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#前提&quot;&gt;&lt;/a&gt; 前提&lt;/h3&gt;
&lt;p&gt;node10^ 、 npm6^ 、vue-cli3&lt;/p&gt;
&lt;h3 id=&quot;简写&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; h
      
    
    </summary>
    
    
      <category term="Vue-SSR" scheme="https://pengdon.github.io/categories/Vue-SSR/"/>
    
    
      <category term="vue" scheme="https://pengdon.github.io/tags/vue/"/>
    
      <category term="prerender-spa-plugin" scheme="https://pengdon.github.io/tags/prerender-spa-plugin/"/>
    
      <category term="seo" scheme="https://pengdon.github.io/tags/seo/"/>
    
  </entry>
  
  <entry>
    <title>vue-ssr基本用法</title>
    <link href="https://pengdon.github.io/2019/11/14/vueSsr1/"/>
    <id>https://pengdon.github.io/2019/11/14/vueSsr1/</id>
    <published>2019-11-14T12:11:27.000Z</published>
    <updated>2020-04-28T01:41:31.598Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基础"><a class="markdownIt-Anchor" href="#基础"></a> 基础</h3><h4 id="1-先创建一个最基础的nextjs项目"><a class="markdownIt-Anchor" href="#1-先创建一个最基础的nextjs项目"></a> 1. 先创建一个最基础的Nextjs项目</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir vue-srr-demo</span><br><span class="line"><span class="built_in">cd</span> vue-srr-demo</span><br><span class="line">npm init -y</span><br><span class="line">npm install vue vue-server-renderer --save</span><br></pre></td></tr></table></figure><h4 id="2-创建一个appjs文件内容如下"><a class="markdownIt-Anchor" href="#2-创建一个appjs文件内容如下"></a> 2. 创建一个app.js文件,内容如下：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">const Vue = require(<span class="string">'vue'</span>)</span><br><span class="line">module.exports = <span class="keyword">function</span> createApp (context) &#123;</span><br><span class="line">    <span class="built_in">return</span> new Vue(&#123;</span><br><span class="line">        data: &#123;</span><br><span class="line">          url: context.url</span><br><span class="line">        &#125;,</span><br><span class="line">        template: `&lt;div&gt;Vue SSR URL: &#123;&#123; url &#125;&#125;&lt;/div&gt;`</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-与服务器集成"><a class="markdownIt-Anchor" href="#2-与服务器集成"></a> 2. 与服务器集成</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install express --save</span><br></pre></td></tr></table></figure><h4 id="3-创建一个serverjs文件内容如下"><a class="markdownIt-Anchor" href="#3-创建一个serverjs文件内容如下"></a> 3. 创建一个server.js文件,内容如下：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">const server = require(<span class="string">'express'</span>)()</span><br><span class="line"></span><br><span class="line">server.get(<span class="string">'/ssr'</span>, (request, response) =&gt; &#123;</span><br><span class="line">   response.send(<span class="string">"当前访问URL "</span>+request.url)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">server.listen(8000)</span><br></pre></td></tr></table></figure><h4 id="4-创建一个页面模板indexhtml内容如下"><a class="markdownIt-Anchor" href="#4-创建一个页面模板indexhtml内容如下"></a> 4. 创建一个页面模板index.html,内容如下：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;&lt;title&gt;&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;!--vue-ssr-outlet--&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="5-修改serverjs文件内容如下"><a class="markdownIt-Anchor" href="#5-修改serverjs文件内容如下"></a> 5. 修改server.js文件，内容如下：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">const server = require(<span class="string">'express'</span>)()</span><br><span class="line">const createApp = require(<span class="string">'./app'</span>)</span><br><span class="line">const renderer = require(<span class="string">'vue-server-renderer'</span>).createRenderer()</span><br><span class="line"></span><br><span class="line">server.get(<span class="string">'/ssr'</span>, (request, response) =&gt; &#123;</span><br><span class="line">    const context = &#123; url: request.url &#125;</span><br><span class="line">    const app = createApp(context)</span><br><span class="line">    renderer.renderToString(app, (err, doc) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) throw err</span><br><span class="line">    response.send(doc)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">server.listen(8000)</span><br></pre></td></tr></table></figure><h4 id="6-启动服务查看效果"><a class="markdownIt-Anchor" href="#6-启动服务查看效果"></a> 6. 启动服务查看效果</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node server.js</span><br><span class="line"><span class="comment"># 或者安装nodemon自动重启插件[npm install -g  nodemon]</span></span><br><span class="line">nodemon server.js</span><br></pre></td></tr></table></figure><h4 id="7-在浏览器访问httplocalhost8000ssr"><a class="markdownIt-Anchor" href="#7-在浏览器访问httplocalhost8000ssr"></a> 7. 在浏览器访问：<a href="http://localhost:8000/ssr" target="_blank" rel="noopener">http://localhost:8000/ssr</a></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vue SSR URL: /ssr</span><br></pre></td></tr></table></figure><h4 id="8-模板插值修改indexhtml"><a class="markdownIt-Anchor" href="#8-模板插值修改indexhtml"></a> 8. 模板插值，修改index.html</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;!-- 使用双花括号(double-mustache)进行 HTML 转义插值(HTML-escaped interpolation) --&gt;</span><br><span class="line">    &lt;title&gt;&#123;&#123; title &#125;&#125;&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 使用三花括号(triple-mustache)进行 HTML 不转义插值(non-HTML-escaped interpolation) --&gt;</span><br><span class="line">    &#123;&#123;&#123; meta &#125;&#125;&#125;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;!--vue-ssr-outlet--&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="9-修改serverjs文件内容如下"><a class="markdownIt-Anchor" href="#9-修改serverjs文件内容如下"></a> 9. 修改server.js文件，内容如下：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">const server = require(<span class="string">'express'</span>)()</span><br><span class="line">const createApp = require(<span class="string">'./app'</span>)</span><br><span class="line">const renderer = require(<span class="string">'vue-server-renderer'</span>).createRenderer(&#123;</span><br><span class="line">    template: require(<span class="string">'fs'</span>).readFileSync(<span class="string">'./index.html'</span>, <span class="string">'utf-8'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">server.get(<span class="string">'/ssr'</span>, (request, response) =&gt; &#123;</span><br><span class="line">    const context = &#123;</span><br><span class="line">        url: request.url, </span><br><span class="line">        title: <span class="string">'vue-ssr'</span>, </span><br><span class="line">        meta: </span><br><span class="line">            `</span><br><span class="line">            &lt;meta ...&gt;</span><br><span class="line">            &lt;meta ...&gt;</span><br><span class="line">            `</span><br><span class="line">        &#125;</span><br><span class="line">    const app = createApp(context)</span><br><span class="line">    renderer.renderToString(app, context, (err, doc) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) throw err</span><br><span class="line">        response.send(doc)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">server.listen(8000)</span><br></pre></td></tr></table></figure><h4 id="10-启动服务查看网页源代码发现title和meta标签成功插入"><a class="markdownIt-Anchor" href="#10-启动服务查看网页源代码发现title和meta标签成功插入"></a> 10. 启动服务，查看网页源代码，发现title和meta标签成功插入</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node server.js</span><br><span class="line"><span class="comment"># 或者安装nodemon自动重启插件[npm install -g  nodemon]</span></span><br><span class="line">nodemon server.js</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;基础&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#基础&quot;&gt;&lt;/a&gt; 基础&lt;/h3&gt;
&lt;h4 id=&quot;1-先创建一个最基础的nextjs项目&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-先创建一个最基础
      
    
    </summary>
    
    
      <category term="Vue-SSR" scheme="https://pengdon.github.io/categories/Vue-SSR/"/>
    
    
      <category term="vue" scheme="https://pengdon.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>nextjs+typescript</title>
    <link href="https://pengdon.github.io/2019/11/14/nextjs/"/>
    <id>https://pengdon.github.io/2019/11/14/nextjs/</id>
    <published>2019-11-14T12:11:27.000Z</published>
    <updated>2020-04-28T01:41:32.897Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基础"><a class="markdownIt-Anchor" href="#基础"></a> 基础</h3><h4 id="1-先创建一个最基础的nextjs项目"><a class="markdownIt-Anchor" href="#1-先创建一个最基础的nextjs项目"></a> 1. 先创建一个最基础的Nextjs项目</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir next-ts</span><br><span class="line"><span class="built_in">cd</span> next-ts</span><br><span class="line">npm init -y</span><br><span class="line">npm install --save react react-dom next</span><br><span class="line">mkdir pages</span><br></pre></td></tr></table></figure><h4 id="2-添加typescipt和types相关依赖"><a class="markdownIt-Anchor" href="#2-添加typescipt和types相关依赖"></a> 2. 添加Typescipt和@types相关依赖</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev typescript @types/react @types/node</span><br></pre></td></tr></table></figure><h4 id="3-修改next-ts目录下packagejson文件中scripts属性的内容"><a class="markdownIt-Anchor" href="#3-修改next-ts目录下packagejson文件中scripts属性的内容"></a> 3. 修改next-ts目录下package.json文件中scripts属性的内容</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"dev"</span>: <span class="string">"next"</span>,</span><br><span class="line">    <span class="string">"build"</span>: <span class="string">"next build"</span>,</span><br><span class="line">    <span class="string">"start"</span>: <span class="string">"next start"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-在pages目录下创建indextsx文件文件内容如下"><a class="markdownIt-Anchor" href="#4-在pages目录下创建indextsx文件文件内容如下"></a> 4. 在pages目录下创建index.tsx文件，文件内容如下：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">const Home = () =&gt; &lt;h1&gt;Nextjs typescript!&lt;/h1&gt;;</span><br><span class="line"><span class="built_in">export</span> default Home;</span><br></pre></td></tr></table></figure><h4 id="5-启动dev-server查看效果"><a class="markdownIt-Anchor" href="#5-启动dev-server查看效果"></a> 5. 启动dev server查看效果</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;基础&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#基础&quot;&gt;&lt;/a&gt; 基础&lt;/h3&gt;
&lt;h4 id=&quot;1-先创建一个最基础的nextjs项目&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-先创建一个最基础
      
    
    </summary>
    
    
      <category term="React-SSR" scheme="https://pengdon.github.io/categories/React-SSR/"/>
    
    
      <category term="nextjs" scheme="https://pengdon.github.io/tags/nextjs/"/>
    
  </entry>
  
</feed>
